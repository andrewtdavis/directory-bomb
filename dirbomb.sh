#!/usr/bin/env bash

# Ensure three arguments are provided
if [[ $# -ne 3 ]]; then
    echo "Usage: $0 <target_directory> <num_directories> <num_files_per_directory>"
    exit 1
fi

target_dir=$1
num_dirs=$2
num_files=$3

# Confirm execution
cat << 'EOF'
 .--..--..--..--..--..--..--..--..--..--..--..--..--..--..--..--..--..--..--..--..--..--..--..--..--..--..--..--.
/ .. \.. \.. \.. \.. \.. \.. \.. \.. \.. \.. \.. \.. \.. \.. \.. \.. \.. \.. \.. \.. \.. \.. \.. \.. \.. \.. \.. \
\ \/\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ \/ /
 \/ /`--'`--'`--'`--'`--'`--'`--'`--'`--'`--'`--'`--'`--'`--'`--'`--'`--'`--'`--'`--'`--'`--'`--'`--'`--'`--'\/ /
 / /\                                                                                                        / /\
/ /\ \                                                                                                      / /\ \
\ \/ /   █████   ███   █████   █████████   ███████████   ██████   █████ █████ ██████   █████   █████████    \ \/ /
 \/ /   ░░███   ░███  ░░███   ███░░░░░███ ░░███░░░░░███ ░░██████ ░░███ ░░███ ░░██████ ░░███   ███░░░░░███    \/ /
 / /\    ░███   ░███   ░███  ░███    ░███  ░███    ░███  ░███░███ ░███  ░███  ░███░███ ░███  ███     ░░░     / /\
/ /\ \   ░███   ░███   ░███  ░███████████  ░██████████   ░███░░███░███  ░███  ░███░░███░███ ░███            / /\ \
\ \/ /   ░░███  █████  ███   ░███░░░░░███  ░███░░░░░███  ░███ ░░██████  ░███  ░███ ░░██████ ░███    █████   \ \/ /
 \/ /     ░░░█████░█████░    ░███    ░███  ░███    ░███  ░███  ░░█████  ░███  ░███  ░░█████ ░░███  ░░███     \/ /
 / /\       ░░███ ░░███      █████   █████ █████   █████ █████  ░░█████ █████ █████  ░░█████ ░░█████████     / /\
/ /\ \       ░░░   ░░░      ░░░░░   ░░░░░ ░░░░░   ░░░░░ ░░░░░    ░░░░░ ░░░░░ ░░░░░    ░░░░░   ░░░░░░░░░     / /\ \
\ \/ /                                                                                                      \ \/ /
 \/ /                                                                                                        \/ /
 / /\.--..--..--..--..--..--..--..--..--..--..--..--..--..--..--..--..--..--..--..--..--..--..--..--..--..--./ /\
/ /\ \.. \.. \.. \.. \.. \.. \.. \.. \.. \.. \.. \.. \.. \.. \.. \.. \.. \.. \.. \.. \.. \.. \.. \.. \.. \.. \/\ \
\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `'\ `' /
 `--'`--'`--'`--'`--'`--'`--'`--'`--'`--'`--'`--'`--'`--'`--'`--'`--'`--'`--'`--'`--'`--'`--'`--'`--'`--'`--'`--'

EOF

echo "This will create $num_dirs directories inside '$target_dir', each containing $num_files files."
echo "DELETING THIS WILL TAKE MUCH LONGER THAN CREATING IT!"
echo ""
read -p "Type 'execute' to proceed: " confirmation

if [[ "$confirmation" != "execute" ]]; then
    echo "Operation cancelled."
    exit 1
fi

# Create the base directory
mkdir -p "$target_dir"

# Create directories efficiently
eval mkdir -p "$target_dir"/f{1.."$num_dirs"}

# Use xargs to parallelize file creation
export num_files
find "$target_dir" -mindepth 1 -maxdepth 1 -type d | xargs -P 10 -I {} bash -c '
    for ((i=1; i<=num_files; i++)); do
        : > "{}/file$i"
    done
'

echo "Created $num_dirs directories in '$target_dir', each containing $num_files files."